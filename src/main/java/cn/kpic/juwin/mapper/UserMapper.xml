<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace的作用在于对sql进行分类化管理，理解sql隔离
这里注意：如果使用Mapper代理开发的话，那么namespace将会有特殊重要的作用
 -->
 <!-- 知识点：
 #{}：表示占位符，预编译，不会引起sql注入
 ${}：表示拼接符，可能会引起sql注入
  -->
<mapper namespace="cn.kpic.juwin.mapper.UserMapper">

	<select id="findUserById" parameterType="java.lang.Long" resultType="cn.kpic.juwin.domain.User">
		SELECT * FROM tb_user WHERE id=#{id} AND isdel = 0
	</select>

	<select id="findUserByName" parameterType="java.lang.String" resultType="cn.kpic.juwin.domain.User">
		SELECT * FROM tb_user WHERE name=#{name} AND isdel = 0
	</select>

	<select id="getAllUser" resultType="cn.kpic.juwin.domain.User">
		SELECT * FROM tb_user WHERE isdel = 0
	</select>

	<insert id="addUser" parameterType="cn.kpic.juwin.domain.User">
		insert into tb_user (name, password, age)
		values (#{name}, #{password}, #{age})
		<selectKey resultType="java.lang.Long" keyProperty="id" >
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>

	<select id="jugeUser" parameterType="java.util.Map" resultType="cn.kpic.juwin.domain.User">
		SELECT * FROM tb_user WHERE name = #{name} AND password = #{password} AND isdel = 0
	</select>

	<update id="update" parameterType="cn.kpic.juwin.domain.User">
		update tb_user
		<trim prefix="set" suffixOverrides=",">
			<if test="name != null">name = #{name},</if>
			<if test="age != null">age = #{age},</if>
			<if test="password != null">password = #{password},</if>
			<if test="address != null">address = #{address},</if>
			<if test="avater != null">avater = #{avater},</if>
			<if test="tag != null">tag = #{tag},</if>
			<if test="sex != null">sex = #{sex},</if>
			<if test="birth != null">birth = #{birth},</if>
			<if test="postNum != null">postNum = #{postNum},</if>
		</trim>
		where id = #{id,jdbcType=BIGINT}
	</update>

	<select id="getAllSmallManagerByPbarId" parameterType="java.lang.Long" resultType="cn.kpic.juwin.domain.vo.TopicManager">
		SELECT
		tu.id,
		tu.name,
		tu.userPic,
		tu.avater,
		tul.level,
		tul.score
		FROM tb_user_pbar tup
		JOIN tb_user tu ON tup.userId = tu.id
		JOIN tb_user_level tul ON tul.userId = tu.id
		WHERE tup.pbarId = #{id} AND tup.type = 2
	</select>

	<select id="isSmallManager" parameterType="java.util.Map" resultType="java.lang.Long">
		SELECT
		userId
		FROM tb_user_pbar
		WHERE pbarId = #{pbarId} AND userId = #{userId} AND type = 2
	</select>

	<select id="getAllPbarUsers" parameterType="java.util.Map" resultType="cn.kpic.juwin.domain.vo.UserVo">
		SELECT
		tu.id,
		tu.name,
		tu.age,
		tu.sex,
		tu.tag,
		tu.avater,
		tu.userPic,
		tul.level,
		tul.score
		FROM
		tb_pbar_focus tpf
		JOIN tb_user tu ON tpf.userId = tu.id
		JOIN tb_user_level tul ON tu.id = tul.userId
		WHERE tpf.pbarId = #{pbarId} AND tu.isdel = 0
		ORDER BY tpf.createTime DESC
		LIMIT #{page}, 10
	</select>

	<update id="updPostNum" parameterType="java.lang.Long">
		update tb_user set postNum = postNum + 1 where id = #{id}
	</update>

	
</mapper>